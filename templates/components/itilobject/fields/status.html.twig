 {#
 # ---------------------------------------------------------------------
 #
 # GLPI - Gestionnaire Libre de Parc Informatique
 #
 # http://glpi-project.org
 #
 # @copyright 2015-2024 Teclib' and contributors.
 # @copyright 2003-2014 by the INDEPNET Development Team.
 # @licence   https://www.gnu.org/licenses/gpl-3.0.html
 #
 # ---------------------------------------------------------------------
 #
 # LICENSE
 #
 # This file is part of GLPI.
 #
 # This program is free software: you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published by
 # the Free Software Foundation, either version 3 of the License, or
 # (at your option) any later version.
 #
 # This program is distributed in the hope that it will be useful,
 # but WITHOUT ANY WARRANTY; without even the implied warranty of
 # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 # GNU General Public License for more details.
 #
 # You should have received a copy of the GNU General Public License
 # along with this program.  If not, see <https://www.gnu.org/licenses/>.
 #
 # ---------------------------------------------------------------------
 #}

{% import 'components/form/fields_macros.html.twig' as fields %}

{% set all_statuses = item.getAllStatuses() %}
{% set linkable_statuses = item.getStatusLink() %}

{% if canupdate %}
   {% set status_field %}
<div class="dropdown">
    <button class="btn dropdown w-100 custom-button" type="button" data-bs-toggle="dropdown" aria-expanded="false">
        <span class="status-text">
            <i {{ item.getStatusIcon(item.fields['status'])|raw }}</i>
            {{ all_statuses[item.fields['status']]|default('') }}
        </span>
        <span class="select2-selection__arrow" role="presentation">
            <b role="presentation"></b>
        </span>
    </button>
    <ul class="dropdown-menu w-100" aria-labelledby="dropdownMenuButton">
        {% for key, label in all_statuses %}
            {% set link = linkable_statuses[key].link|default(null) %}
            <li>
                <a class="dropdown-item {% if key == item.fields['status'] %}active{% endif %}" 
                   href="{{ link ? link ~ '&status=' ~ key : '#' }}"
                   {% if link %}onclick="window.location.href='{{ link ~ '&status=' ~ key }}'; return false;"{% endif %}>
                    {{ item.getStatusIcon(key)|raw }} {{ label }}
                </a>
            </li>
        {% endfor %}
    </ul>
</div>

<style>

.dropdownMenuButton.btn.drpodown-toggle.custom-button {
padding: 0px 20px 0px 80x;

}

/* Alineación del texto en el span */
.status-text {
    display: inline-block;
    text-align: left; /* Alinea el span a la izquierda */
}

/* Estilo personalizado para el botón de estado */
.custom-button {
    color: #444444; /* Color del texto en el botón (puedes elegir cualquier color que prefieras) */
    font-weight: normal; /* Quitar la negrita */
text-align: left;
justify-content: flex-start; /* Asegura que el contenido se alinee al principio */
line-height: calc(1.4285714286em + 0.875rem + 2px);
padding: 0px 10px;
border-color: #d9dbde;
}
/* Estilo para pegar el menú al botón */
.dropdown-menu {
    margin-top: -1px; /* Quita el espacio vertical entre el botón y el menú */
    border-radius: 0; /* Opcional: Quitar el redondeo si lo deseas */
    padding: 0; /* Opcional: Reducir el espacio interno del menú */
}

/* Asegurar que el dropdown esté alineado con el botón */
.custom-button + .dropdown-menu {
    top: 100%; /* Asegura que el menú se alinee justo debajo del botón */
    left: 0; /* Alinea el menú al borde izquierdo del botón */
}

/* Asegurarse de que la flecha se muestre al lado derecho */
.custom-button .select2-selection__arrow {
border-color: #888 transparent transparent transparent;
    border-style: solid;
    border-width: 5px 4px 0 4px;
    margin-left: -4px;
    margin-top: -2px;
    position: absolute;
    right: 07px; /* Mueve la flecha al lado derecho */
    top: 57%;
    width: 0;
}

button[aria-expanded="true"] .select2-selection__arrow {
    transform: rotate(180deg); /* Invierte la flecha hacia arriba */
}
/* Asegurarse de que el botón no cambie de color al pasar el mouse */
.custom-button:hover {
    color: #444444; /* Mantener el color del texto sin cambios al pasar el mouse */
border-color: #d9dbde;
}
.dropdown-item {
    color: #444444; /* Negro para el texto del estado seleccionado */
}

.dropdown-item.active {
    background-color: #eaeef2; /* Gris para el fondo del estado seleccionado */
    color: #444444; /* Negro para el texto del estado seleccionado */
}

.dropdown-item:hover {
    background-color: #c8eafd; /* Cambiar color de fondo en hover */
    color: white; /* Cambiar color de texto */
}
</style>

      {% set validation_class = item.getValidationClassInstance() %}
      {% if validation_class is not null %}
         {{ validation_class.alertValidation(item, 'status') }}
      {% endif %}

      {{ include('components/itilobject/timeline/pending_reasons_messages.html.twig', {
         'display_for_parent': true,
      }) }}
   {% endset %}
{% else %}
   {% set field_options = field_options|merge({'center': true}) %}
   {% set status_field %}
      {{ item.getStatusIcon(item.fields['status'])|raw }}
      {{ all_statuses[item.fields['status']]|default('') }}

   {% if item.canReopen() %}
      <a href="{{ item.getLinkURL() }}&amp;_openfollowup=1"
         class="btn btn-ghost-secondary">
         <i class="far fa-folder-open"></i>
         <span>{{ __('Reopen') }}</span>
      </a>
   {% endif %}

   {% endset %}
{% endif %}

{{ fields.field(
   'status',
   status_field,
   __('Status'),
   field_options
) }}
